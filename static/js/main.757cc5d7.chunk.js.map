{"version":3,"sources":["path.js","components/NavigationBar.js","components/HomePage.js","components/BasicForm.js","components/DatePickerField.js","components/FormikTest.js","App.js","reportWebVitals.js","index.js"],"names":["BASIC_FORM","FORMIK_FORM","NavigationBarComponent","pathname","useLocation","className","to","type","id","HomePageComponent","style","fontSize","href","target","rel","BasicFormComponents","initialValues","email","password","validate","values","errors","test","onSubmit","setSubmitting","setTimeout","alert","JSON","stringify","touched","handleChange","handleBlur","handleSubmit","isSubmitting","htmlFor","name","onChange","onBlur","value","placeholder","disabled","DatePickerField","props","setFieldValue","useFormikContext","useField","field","selected","Date","val","FormikForm","picked","toggle","checked","friends","gender","selection","date","a","Promise","r","role","gap","insert","remove","push","length","map","friend","index","component","onClick","event","slice","call","selectedOptions","option","multiple","showTimeSelect","dateFormat","App","path","exact","HomePage","BasicForm","FormikTest","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.757cc5d7.chunk.js","sourcesContent":["export const ROOT = \"/\";\r\nexport const BASIC_FORM = \"/basic-form\";\r\nexport const FORMIK_FORM = \"/formik-test\";","import React from 'react';\r\nimport { ROOT, BASIC_FORM, FORMIK_FORM } from \"../path\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\n\r\nexport default function NavigationBarComponent() {\r\n    const location = useLocation();\r\n    const { pathname } = location;\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            <Link className={`navbar-brand px-2`} to={ROOT}>Formik</Link>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                <ul className=\"navbar-nav\">\r\n                    <li className=\"nav-item\">\r\n                        <Link className={`nav-link ${BASIC_FORM === pathname && \"active\"}`} to={BASIC_FORM}>Basic</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className={`nav-link ${FORMIK_FORM === pathname && \"active\"}`} to={FORMIK_FORM}>Formik</Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function HomePageComponent() {\r\n    return (\r\n        <div className=\"p-3\" style={{ fontSize: 18 }}>\r\n            <section className=\"mb-2\">\r\n                <p>Formik is a react library for us to build form in a convenient way.</p>\r\n                <a className=\"link-secondary\" href=\"https://formik.org/docs/overview\" target=\"_blank\" rel=\"noreferrer\">Fromik Offical Site</a>\r\n            </section>\r\n            <hr />\r\n            <section className=\"mb-2\">\r\n                <h5>Credit:</h5>\r\n                <div>DatePickerField - <a className=\"link-secondary\" href=\"https://stackoverflow.com/questions/56312372/react-datepicker-with-a-formik-form#answer-58650742\" target=\"_blank\" rel=\"noreferrer\">React-datepicker with a Formik form</a></div>\r\n            </section>\r\n            <section className=\"mt-5\">\r\n                <p>This site is for testing purpose.</p>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Formik } from 'formik';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nexport default function BasicFormComponents() {\r\n    return (\r\n        <div className=\"p-3\">\r\n            <Formik\r\n                initialValues={{ email: '', password: '' }}\r\n                validate={values => {\r\n                    const errors = {};\r\n                    if (!values.email) {\r\n                        errors.email = 'Required';\r\n                    } else if (\r\n                        !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n                    ) {\r\n                        errors.email = 'Invalid email address';\r\n                    }\r\n                    return errors;\r\n                }}\r\n                onSubmit={(values, { setSubmitting }) => {\r\n                    setTimeout(() => {\r\n                        alert(JSON.stringify(values, null, 2));\r\n                        setSubmitting(false);\r\n                    }, 400);\r\n                }}\r\n            >\r\n                {({\r\n                    values,\r\n                    errors,\r\n                    touched,\r\n                    handleChange,\r\n                    handleBlur,\r\n                    handleSubmit,\r\n                    isSubmitting,\r\n\r\n                    /* and other goodies */\r\n                }) => {\r\n\r\n                    return (\r\n                        <form onSubmit={handleSubmit} >\r\n                            <div className=\"container\" >\r\n                                <div className=\"row mb-2\">\r\n                                    <div className=\"col-12 col-md-6\">\r\n                                        <label htmlFor=\"email\" className=\"form-label\">Email</label>\r\n                                        <input\r\n                                            type=\"email\"\r\n                                            name=\"email\"\r\n                                            id=\"email\"\r\n                                            className=\"form-control\"\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                            value={values.email}\r\n                                            placeholder=\"Email\"\r\n                                        />\r\n                                        {errors.email && touched.email ? <div className=\"text-danger\">{errors.email}</div> : null}\r\n                                        {/* {errors.email && touched.email && errors.email} */}\r\n                                    </div>\r\n                                    <div className=\"col-12 col-md-6\">\r\n                                        <label htmlFor=\"password\" className=\"form-label\">Password</label>\r\n                                        <input\r\n                                            type=\"password\"\r\n                                            name=\"password\"\r\n                                            id=\"password\"\r\n                                            className=\"form-control\"\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                            value={values.password}\r\n                                            placeholder=\"Password\"\r\n                                        />\r\n                                        {errors.password && touched.password ? <div className=\"text-danger\">{errors.password}</div> : null}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12\">\r\n                                        <button type=\"submit\" className={\"btn btn-primary\"} disabled={isSubmitting}>\r\n                                            Submit\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    );\r\n                }}\r\n            </Formik>\r\n        </div>\r\n    );\r\n}\r\n","// Credit: https://stackoverflow.com/questions/56312372/react-datepicker-with-a-formik-form#answer-58650742\r\n\r\nimport React from 'react'\r\nimport { useField, useFormikContext } from \"formik\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\n\r\nexport default function DatePickerField({ ...props }) {\r\n    const { setFieldValue } = useFormikContext();\r\n    const [field] = useField(props);\r\n    \r\n    return (\r\n        <DatePicker\r\n            {...field}\r\n            {...props}\r\n            selected={(field.value && new Date(field.value)) || null}\r\n            onChange={val => {\r\n                setFieldValue(field.name, val);\r\n            }}\r\n        />\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Formik, Field, Form, ErrorMessage, FieldArray } from 'formik';\r\nimport DatePickerField from \"./DatePickerField\";\r\n\r\n\r\nexport default function FormikForm() {\r\n\r\n    return (\r\n        <div className=\"px-3\">\r\n            <Formik\r\n                initialValues={{\r\n                    picked: '',\r\n                    toggle: false,\r\n                    checked: [],\r\n                    friends: [{\r\n                        name: \"\",\r\n                        email: \"\",\r\n                        gender: \"\",\r\n                    }],\r\n                    selection: [],\r\n                    date: new Date()\r\n                }}\r\n                onSubmit={async (values) => {\r\n                    await new Promise((r) => setTimeout(r, 500));\r\n                    alert(JSON.stringify(values, null, 2));\r\n                }}\r\n            >\r\n                {({ values, setFieldValue }) => (\r\n                    <Form>\r\n                        {/* Radio */}\r\n                        <div id=\"my-radio-group\">Radio</div>\r\n                        <div role=\"group\" aria-labelledby=\"my-radio-group\">\r\n                            <label>\r\n                                <Field type=\"radio\" name=\"picked\" value=\"One\" />\r\n                                One\r\n                            </label>\r\n                            <label>\r\n                                <Field type=\"radio\" name=\"picked\" value=\"Two\" />\r\n                                Two\r\n                            </label>\r\n                            <div>Picked: {values.picked}</div>\r\n                        </div>\r\n                        <hr />\r\n                        <div>Checkbox</div>\r\n                        <label>\r\n                            <Field type=\"checkbox\" name=\"toggle\" />\r\n                            {`${values.toggle}`}\r\n                        </label>\r\n                        <div className=\"d-flex\" style={{ gap: 10 }}>\r\n                            <div className=\"form-check\" aria-labelledby=\"checkbox-group\">\r\n                                <label className=\"form-check-label\" htmlFor=\"check-one\">One</label>\r\n                                <Field className=\"form-check-input\" id=\"check-one\" type=\"checkbox\" name=\"checked\" value=\"One\" />\r\n                            </div>\r\n                            <div className=\"form-check\" aria-labelledby=\"checkbox-group\">\r\n                                <label className=\"form-check-label\" htmlFor=\"check-two\">Two</label>\r\n                                <Field className=\"form-check-input\" id=\"check-two\" type=\"checkbox\" name=\"checked\" value=\"Two\" />\r\n                            </div>\r\n                            <div className=\"form-check\" aria-labelledby=\"checkbox-group\">\r\n                                <label className=\"form-check-label\" htmlFor=\"check-three\">Three</label>\r\n                                <Field className=\"form-check-input\" id=\"check-three\" type=\"checkbox\" name=\"checked\" value=\"Three\" />\r\n                            </div>\r\n                        </div>\r\n                        <hr />\r\n\r\n                        <FieldArray name=\"friends\">\r\n                            {({ insert, remove, push }) => (\r\n                                <div>\r\n                                    {values.friends.length > 0 &&\r\n                                        values.friends.map((friend, index) => (\r\n                                            <div className=\"row\" key={index}>\r\n                                                <div className=\"col\">\r\n                                                    <label htmlFor={`friends.${index}.name`}>Name</label>\r\n                                                    <Field\r\n                                                        name={`friends.${index}.name`}\r\n                                                        placeholder=\"Jane Doe\"\r\n                                                        type=\"text\"\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        name={`friends.${index}.name`}\r\n                                                        component=\"div\"\r\n                                                        className=\"field-error\"\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"col\">\r\n                                                    <label htmlFor={`friends.${index}.email`}>Email</label>\r\n                                                    <Field\r\n                                                        name={`friends.${index}.email`}\r\n                                                        placeholder=\"jane@acme.com\"\r\n                                                        type=\"email\"\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        name={`friends.${index}.name`}\r\n                                                        component=\"div\"\r\n                                                        className=\"field-error\"\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"col\">\r\n                                                    <div role=\"group\" aria-labelledby=\"my-radio-gender-group\">\r\n                                                        <div id=\"my-radio-gender-group\">Gender</div>\r\n                                                        <label>\r\n                                                            <Field type=\"radio\" name={`friends.${index}.gender`} value=\"male\" />\r\n                                                            Male\r\n                                                        </label>\r\n                                                        <label>\r\n                                                            <Field type=\"radio\" name={`friends.${index}.gender`} value=\"female\" />\r\n                                                            Female\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"col\">\r\n                                                    <button\r\n                                                        type=\"button\"\r\n                                                        className=\"btn btn-primary\"\r\n                                                        onClick={() => remove(index)}\r\n                                                    >\r\n                                                        &times;\r\n                                                    </button>\r\n                                                </div>\r\n                                            </div>\r\n                                        ))}\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        className=\"btn btn-primary\"\r\n                                        onClick={() => push({ name: '', email: '', gender: \"\" })}\r\n                                    >\r\n                                        Add Friend\r\n                                    </button>\r\n                                </div>\r\n                            )}\r\n                        </FieldArray>\r\n                        <hr />\r\n\r\n                        {/* Multiple Selection */}\r\n                        <Field className=\"form-select\" component=\"select\" name=\"selection\" onChange={(event) => setFieldValue(\"selection\", [].slice.call(event.target.selectedOptions).map(option => option.value))} multiple={true}>\r\n                            <option value=\"apple\">Apple</option>\r\n                            <option value=\"orange\">Orange</option>\r\n                            <option value=\"melon\">Melon</option>\r\n                        </Field>\r\n\r\n\r\n                        <hr />\r\n\r\n                        <DatePickerField className=\"form-control\" name=\"date\" showTimeSelect dateFormat=\"Pp\" />\r\n\r\n                        <hr />\r\n                        <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n","\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { ROOT, BASIC_FORM, FORMIK_FORM } from \"./path\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport \"./App.css\";\r\n// Components\r\nimport NavigationBar from \"./components/NavigationBar\";\r\nimport HomePage from \"./components/HomePage\";\r\nimport BasicForm from \"./components/BasicForm\";\r\nimport FormikTest from \"./components/FormikTest\";\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <NavigationBar />\r\n      <Switch>\r\n        <Route path={ROOT} exact component={HomePage} />\r\n        <Route path={BASIC_FORM} exact component={BasicForm} />\r\n        <Route path={FORMIK_FORM} exact component={FormikTest} />\r\n        <Route path={\"*\"} component={HomePage} />\r\n      </Switch>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}